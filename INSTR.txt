0x00	HLTC	IMM	SR.R = 0
0x01	NOOP	
0x02	CALL	AIM	PUSAD, PUSAD, PC = AIM
0x03	RESR		POPAD, POPAD, PC = ADDR
0x04	INBY	IMM PORT = IMMH
0x05	OUTB		?* IMMH ! something
0x06	MOVA	IMM A = REG[IMM] | REG[IMM] = A 
0x07	MOVB	IMM B = REG[IMM] | REG[IMM] = B
0x08	MOVC		A = C | C = A
0x09	STOI	I,A MEM[A] = I 
0x0A	PUHI	IMM	MEM[SP] = IMM, SP++
0x0B	PUHR	IMM	MEM[SP] = REG[IMM], SP++
0x0C	PUHS	SIM	MEM[SP] = SIM[A], A--, SP++
0x0D	POPR	IMM	SP--, REG[IMM] = MEM[SP]
0x0E	*LODA	IMM	A = IMM
0x0F	LOAA	AIM	A = RAM[AIM]
0x10	STOA	AIM	RAM[AIM] = A
0x11	DECR	IMM	REG[IMM]--
0x12	INCR	IMM	REG[IMM]++
0x13	*CMPA	IMM	A & IMM
0x14	*LODB	IMM	B = IMM
0x15	LOAB	AIM	B = RAM[AIM]
0x16	STOB	AIM	RAM[AIM] = B
0x17	*CMPB	IMM	B & IMM
0x18	LODC	IMM	C = IMM
0x19	LOAC	AIM	C = RAM[AIM]
0x1A	STOC	AIM	RAM[AIM] = C
0x1B	*CMPC	IMM	C & IMM
0x1C	*LODD	IMM	D = IMM
0x1D	LOAD	AIM	D = RAM[AIM]
0x1E	STOD	AIM	RAM[AIM] = D
0x1F	*CMPD	IMM	D & IMM
0x20	*ADDI	IMM A + IMM
0x21	*SUBI	IMM A - IMM
0x22	*ADDR	IMM A + REG[IMM]
0x23	*SUBR	IMM A - REG[IMM]
0x24	*CMPF	IMM IMM & F = 1 | T = 1 ! T = 0	
0x25	*ANDI	IMM	A = IMM & A
0x26	*NOTI	IMM	A = !IMM
0x27	*ORIM	IMM	A = IMM | A
0x28	*NORI	IMM	A = ~(IMM | A)
0x29	*ANDR	IMM	A = A & REG[IMM]
0x2A	*NOTR	IMM	A = !REG[IMM]
0x2B	*ORRE	IMM	A = A | REG[IMM]
0x2C	*NORR	IMM	A = ~(A | REG[IMM])
0x2D	MOBA		?BA = 0 | BA = 1 & ?BA = 1 | BA = 1
0x2E	*INTB	AIM	I = true | PUSH PC | PUSH PC | PC = AIM
0x2F	JUMP	AIM PC = AIM	
0x30	JINZ	AIM	?Z == 0 | PC = AIM
0x31	JINT	AIM	?T == 0 | PC = AIM
0x32	JIFT	AIM ?T == 1 | PC = AIM
0x33	*INTR		I = true | PUSH PC | PUSH PC | PC = INTVectorAddr
0x34	*REIN		I = false | POP PC | POP PC | PC = CALLADDR
0x35	*UINT	IMM FUNVECTOR[Imm]
0x36	ROLR	IMM REG[IMM] >> shift 1 bit to the left
0x37	RORR	IMM REG[IMM] << shift 1 bit to the right
0x38	JIFC	AIM ?C == 1 | PC = AIM
0x39	JINO	AIM ?O == 0 | PC = AIM
0x3A	GROM	AIM RAM[SUBL] = RAM[AIM].L & RAM[SUBH] = RAM[AIM].H
0x3B	LRLR	IMM	REG[IMM] >> shift 1 bit to the left + C
0x3C	LRRR	IMM	REG[IMM] << shift 1 bit to the right + C
0x3D	LODF	IMM F = IMM 
0x3E	LOBS	IMM Loop RW = 0 ? RW = 1 | A = DataBus
0x3F	LOAR	AIM ADDRBUS = AIM
0x40	LOGC		LOGS THE CPU INFO
0x41
0x42
0x43
0x44
0x45
0x46
0x47
0x48
0x49
0x4A
0x4B
0x4C
0x4D
0x4E
0x4F
0x50
0x51
0x52
0x53
0x54
0x55
0x56
0x57
0x58
0x59
0x5A
0x5B
0x5C
0x5D
0x5E
0x5F
0x60
0x61
0x62
0x63
0x64
0x65
0x66
0x67
0x68
0x69
0x6A
0x6B
0x6C
0x6D
0x6E
0x6F
0x70
0x71
0x72
0x73
0x74
0x75
0x76
0x77
0x78
0x79
0x7A
0x7B
0x7C
0x7D
0x7E
0x7F
0x80
0x81
0x82
0x83
0x84
0x85
0x86
0x87
0x88
0x89
0x8A
0x8B
0x8C
0x8D
0x8E
0x8F
0x90
0x91
0x92
0x93
0x94
0x95
0x96
0x97
0x98
0x99
0x9A
0x9B
0x9C
0x9D
0x9E
0x9F
0xA0
0xA1
0xA2
0xA3
0xA4
0xA5
0xA6
0xA7
0xA8
0xA9
0xAA
0xAB
0xAC
0xAD
0xAE
0xAF
0xB0
0xB1
0xB2
0xB3
0xB4
0xB5
0xB6
0xB7
0xB8
0xB9
0xBA
0xBB
0xBC
0xBD
0xBE
0xBF
0xC0
0xC1
0xC2
0xC3
0xC4
0xC5
0xC6
0xC7
0xC8
0xC9
0xCA
0xCB
0xCC
0xCD
0xCE
0xCF
0xD0
0xD1
0xD2
0xD3
0xD4
0xD5
0xD6
0xD7
0xD8
0xD9
0xDA
0xDB
0xDC
0xDD
0xDE
0xDF
0xE0
0xE1
0xE2
0xE3
0xE4
0xE5
0xE6
0xE7
0xE8
0xE9
0xEA
0xEB
0xEC
0xED
0xEE
0xEF
0xF0
0xF1
0xF2
0xF3
0xF4
0xF5
0xF6
0xF7
0xF8
0xF9
0xFA
0xFB
0xFC
0xFD
0xFE
0xFF